{"ast":null,"code":"var _jsxFileName = \"/Users/saraseid/Desktop/quiz-app/src/components/Questions.jsx\";\nimport React from 'react';\nimport \"../styles/question.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizQuestions = [{\n  question: 'What is the result of the following expression: 3 + 2 + \"7\"?',\n  options: ['57', '12', '32', '37'],\n  answer: '37'\n}, {\n  question: 'What does the isNaN() function do?',\n  options: ['Returns true if the argument is not a number', 'Returns false if the argument is not a number', 'Returns true if the argument is a number', 'Returns false if the argument is a number'],\n  answer: 'Returns true if the argument is not a number'\n}, {\n  question: 'What is the output of the following code: console.log(typeof [1, 2])?',\n  options: ['Array', 'Object', 'undefined', 'number'],\n  answer: 'Object'\n}, {\n  question: 'What does the \"this\" keyword refer to in JavaScript?',\n  options: ['The current function', 'The global object', 'The calling object', 'The new object'],\n  answer: 'The calling object'\n}, {\n  question: 'Which of the following is not a valid JavaScript variable name?',\n  options: ['myVariable', '_myVariable', '2myVariable', '$myVariable'],\n  answer: '2myVariable'\n}, {\n  question: 'What does HTML stand for?',\n  options: ['Hyper Text Markup Language', 'Hyperlinks and Text Markup Language', 'Home Tool Markup Language', 'Hyper Tool Markup Language'],\n  answer: 'Hyper Text Markup Language'\n}, {\n  question: 'Which HTML tag is used to define an unordered list?',\n  options: ['<ul>', '<ol>', '<li>', '<list>'],\n  answer: '<ul>'\n}, {\n  question: 'Which CSS property is used to change the text color of an element?',\n  options: ['text-color', 'color', 'font-color', 'text-style'],\n  answer: 'color'\n}, {\n  question: 'Which CSS property is used to specify the space between the elements?',\n  options: ['margin', 'spacing', 'padding', 'border'],\n  answer: 'margin'\n}];\nfunction Questions(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: props.quizIsStarted &&\n    /*#__PURE__*/\n    //quizQuestions.map((question)=>(\n    // <navbar>\n    // <p key={question.id}>{question.question}</p>\n    // </navbar>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: quizQuestions[0].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"quizQuestions[0].options.map(\", \" (o)=>\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: o\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n    //)\n    //)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","quizQuestions","question","options","answer","Questions","props","console","log","className","children","quizIsStarted","fileName","_jsxFileName","lineNumber","columnNumber","o","_c","$RefreshReg$"],"sources":["/Users/saraseid/Desktop/quiz-app/src/components/Questions.jsx"],"sourcesContent":["import React from 'react'\nimport \"../styles/question.css\";\n\nconst quizQuestions = [\n    {\n      \n      question: 'What is the result of the following expression: 3 + 2 + \"7\"?',\n      options: ['57', '12', '32', '37'],\n      answer: '37'\n    },\n    {\n      \n      question: 'What does the isNaN() function do?',\n      options: ['Returns true if the argument is not a number', 'Returns false if the argument is not a number', 'Returns true if the argument is a number', 'Returns false if the argument is a number'],\n      answer: 'Returns true if the argument is not a number'\n    },\n    {\n      \n      question: 'What is the output of the following code: console.log(typeof [1, 2])?',\n      options: ['Array', 'Object', 'undefined', 'number'],\n      answer: 'Object'\n    },\n    {\n      \n      question: 'What does the \"this\" keyword refer to in JavaScript?',\n      options: ['The current function', 'The global object', 'The calling object', 'The new object'],\n      answer: 'The calling object'\n    },\n    {\n     \n      question: 'Which of the following is not a valid JavaScript variable name?',\n      options: ['myVariable', '_myVariable', '2myVariable', '$myVariable'],\n      answer: '2myVariable'\n    },\n  \n    {\n      \n      question: 'What does HTML stand for?',\n      options: ['Hyper Text Markup Language', 'Hyperlinks and Text Markup Language', 'Home Tool Markup Language', 'Hyper Tool Markup Language'],\n      answer: 'Hyper Text Markup Language'\n    },\n    {\n      \n      question: 'Which HTML tag is used to define an unordered list?',\n      options: ['<ul>', '<ol>', '<li>', '<list>'],\n      answer: '<ul>'\n    },\n    {\n      \n      question: 'Which CSS property is used to change the text color of an element?',\n      options: ['text-color', 'color', 'font-color', 'text-style'],\n      answer: 'color'\n    },\n    {\n      \n      question: 'Which CSS property is used to specify the space between the elements?',\n      options: ['margin', 'spacing', 'padding', 'border'],\n      answer: 'margin'\n    },\n    \n  ];\n  \n  function Questions(props)  {\n    console.log(props)\n    return (\n      <div className='questions'>\n      {props.quizIsStarted && \n        //quizQuestions.map((question)=>(\n          // <navbar>\n          // <p key={question.id}>{question.question}</p>\n        \n          // </navbar>\n          <>\n          <h2>{ quizQuestions[0].question}</h2>\n          \n        <ul>\n\n        quizQuestions[0].options.map(\n         {} (o)=><li>\n          {o}\n          </li>\n        )\n        </ul>\n        </>\n      //)\n      //)\n      }\n      </div>\n    )\n  }\n\n\nexport default Questions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,aAAa,GAAG,CAClB;EAEEC,QAAQ,EAAE,8DAA8D;EACxEC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,oCAAoC;EAC9CC,OAAO,EAAE,CAAC,8CAA8C,EAAE,+CAA+C,EAAE,0CAA0C,EAAE,2CAA2C,CAAC;EACnMC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,uEAAuE;EACjFC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC;EACnDC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,sDAAsD;EAChEC,OAAO,EAAE,CAAC,sBAAsB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,gBAAgB,CAAC;EAC9FC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,iEAAiE;EAC3EC,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;EACpEC,MAAM,EAAE;AACV,CAAC,EAED;EAEEF,QAAQ,EAAE,2BAA2B;EACrCC,OAAO,EAAE,CAAC,4BAA4B,EAAE,qCAAqC,EAAE,2BAA2B,EAAE,4BAA4B,CAAC;EACzIC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,qDAAqD;EAC/DC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC;EAC3CC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,oEAAoE;EAC9EC,OAAO,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,CAAC;EAC5DC,MAAM,EAAE;AACV,CAAC,EACD;EAEEF,QAAQ,EAAE,uEAAuE;EACjFC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;EACnDC,MAAM,EAAE;AACV,CAAC,CAEF;AAED,SAASC,SAASA,CAACC,KAAK,EAAG;EACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,oBACER,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EACzBJ,KAAK,CAACK,aAAa;IAAA;IAClB;IACE;IACA;IAEA;IACAb,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACAZ,OAAA;QAAAY,QAAA,EAAMT,aAAa,CAAC,CAAC,CAAC,CAACC;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEvCjB,OAAA;QAAAY,QAAA,GAAI,+BAGH,EAAE,QAAM,eAAAZ,OAAA;UAAAY,QAAA,EACNM;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,KAEP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACH;IACJ;IACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACE,EAAA,GA3BQZ,SAAS;AA8BpB,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}